Create Database Team15Project2;
USE Team15Project2; //Data Bass Name

CREATE TABLE REF_Problem (
Problem_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25)
);

CREATE TABLE REF_Instr_model (
IM_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(30),
Description1 VARCHAR(10000)
);

CREATE TABLE REF_Disease (
Disease_ID SMALLINT PRIMARY KEY,
NAME1 VARCHAR(25),
Description1 VARCHAR(10000)
);

CREATE TABLE REF_CatChem (
Chem_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25),
Description1 VARCHAR(10000)
);

CREATE TABLE REF_Generic (
Generic_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25),
Description1 VARCHAR(10000)
);

CREATE TABLE REF_Instr_category (
IC_ID SMALLINT PRIMARY KEY,
Name VARCHAR(30),
Description1 VARCHAR(10000)
);

CREATE TABLE REF_Country (
Country_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25)
);

CREATE TABLE REF_Occupation (
Occup_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25)
);

CREATE TABLE REF_State (
State_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25)
);

CREATE TABLE REF_WorkS (
WStatus_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25)
);

CREATE TABLE REF_Zip (
ZIP_ID SMALLINT PRIMARY KEY,
Name1 VARCHAR(25)
);

CREATE TABLE Patient (
THC VARCHAR(6) PRIMARY KEY,
Country_ID SMALLINT,
State_ID SMALLINT,
ZIP_ID SMALLINT,
WStatus_ID SMALLINT,
Occup_ID SMALLINT, 
Surname VARCHAR(25),
First_name VARCHAR(15),
SSN VARCHAR(10),
DOB DATE,
Insurance VARCHAR(10),
Tin_background CHAR(1),
H_background CHAR(1),
Tin_when DATE,
H_when DATE,
T_Ind_comments VARCHAR(1000),
H_Ind_comments VARCHAR(1000),
FOREIGN KEY (Country_ID) references REF_Country(Country_ID),
FOREIGN KEY (Occup_ID) references REF_Occupation(Occup_ID),
FOREIGN KEY (State_ID) references REF_State(State_ID),
FOREIGN KEY (WStatus_ID) references REF_WorkS(WStatus_ID),
FOREIGN KEY (ZIP_ID) references REF_Zip(ZIP_ID)
);

CREATE TABLE Visit (
Visit_ID INTEGER PRIMARY KEY,
THC VARCHAR(6) NOT NULL UNIQUE,
Visit_nr SMALLINT NOT NULL,
Date1 DATETIME NOT NULL,
Comments VARCHAR(10000),
FOREIGN KEY (THC) references Patient(THC)
);

CREATE TABLE Audiological (
VISIT_ID INTEGER,
Comments VARCHAR(10000),
R25 NUMERIC(28),
R50 NUMERIC(28),
R1 NUMERIC(28),
R2 NUMERIC(28),
R3 NUMERIC(28),
R4 NUMERIC(28),
R6 NUMERIC(28),
R8 NUMERIC(28),
R10 NUMERIC(28),
R12 NUMERIC(28),
L25 NUMERIC(28),
L50 NUMERIC(28),
L1 NUMERIC(28),
L2 NUMERIC(28),
L3 NUMERIC(28),
L4 NUMERIC(28),
L6 NUMERIC(28),
L8 NUMERIC(28),
L10 NUMERIC(28),
L12 NUMERIC(28),
T_PR NUMERIC(28),
T_Rm VARCHAR(6),
T_LR NUMERIC(28),
Th_R NUMERIC(28),
T_RLs NUMERIC(28),
T_PL NUMERIC(28),
T_Lm VARCHAR(6),
T_LL NUMERIC(28),
Th_L NUMERIC(28),
T_Ls NUMERIC(28),
WNR NUMERIC(28),
WNL NUMERIC(28),
MRR NUMERIC(28),
MRL NUMERIC(28),
MRB NUMERIC(28),
MLR NUMERIC(28),
MLL NUMERIC(28),
MLB NUMERIC(28),
MBR NUMERIC(28),
M_BL NUMERIC(28),
M_BB NUMERIC(28),
R_SD NUMERIC(28),
L_SD NUMERIC(28),
LR50 NUMERIC(28),
LR1 NUMERIC(28),
LR2 NUMERIC(28),
LR3 NUMERIC(28),
LR4 NUMERIC(28),
LR6 NUMERIC(28),
LR8 NUMERIC(28),
LR12 NUMERIC(28),
LRTP NUMERIC(28),
LL50 NUMERIC(28),
LL1 NUMERIC(28),
LL2 NUMERIC(28),
LL3 NUMERIC(28),
LL4 NUMERIC(28),
LL6 NUMERIC(28),
LL8 NUMERIC(28),
LL12 NUMERIC(28),
LLTP NUMERIC(28),
FOREIGN KEY (Visit_ID) REFERENCES Visit(Visit_ID)
);

CREATE TABLE THI (
Visit_ID INTEGER,
Sc_T SMALLINT,
Sc_F SMALLINT,
Sc_E SMALLINT,
Sc_C SMALLINT,
F1 SMALLINT,
F2 SMALLINT,
E3 SMALLINT,
F4 SMALLINT,
C5 SMALLINT,
E6 SMALLINT,
F7 SMALLINT,
C8 SMALLINT,
F9 SMALLINT,
E10 SMALLINT,
C11 SMALLINT,
F12 SMALLINT,
F13 SMALLINT,
E14 SMALLINT,
F15 SMALLINT,
E16 SMALLINT,
E17 SMALLINT,
F18 SMALLINT,
C19 SMALLINT,
F20 SMALLINT,
E21 SMALLINT,
E22 SMALLINT,
C23 SMALLINT,
F24 SMALLINT,
E25 SMALLINT,
FOREIGN KEY (Visit_ID) REFERENCES VISIT(Visit_ID)
);

CREATE TABLE TFI
(
	
Visit_ID 	INTEGER,
	
I		INTEGER,
	
SC		INTEGER,
	
C		INTEGER,
	
A		INTEGER,
	
R		INTEGER,
	
Q		INTEGER,
	
E		INTEGER,
	
Q1		SMALLINT,
	
Q2		SMALLINT,
	
Q3		SMALLINT,
	
Q3		SMALLINT,
	
Q4		SMALLINT,
	
Q5		SMALLINT,
	
Q6		SMALLINT,
	
Q7		SMALLINT,
	
Q8		SMALLINT,
	
Q9		SMALLINT,
	
Q10		SMALLINT,
	
Q11		SMALLINT,
	
Q12		SMALLINT,
	
Q13		SMALLINT,
	
Q14		SMALLINT,
	
Q15		SMALLINT,
	
Q16		SMALLINT,
	
Q17		SMALLINT,
	
Q18		SMALLINT,
	
Q19		SMALLINT,
	
Q20		SMALLINT,
	
Q21		SMALLINT,
	
Q22		SMALLINT,
	
Q23		SMALLINT,
	
Q24		SMALLINT,
	
Q25		SMALLINT,
	
FOREIGN KEY (Visit_ID) REFERENCES VISIT(Visit_ID)

);

CREATE TABLE REF_Medicament (
Medicament_ID SMALLINT PRIMARY KEY,
Generic_ID SMALLINT,
Chem_ID SMALLINT,
Disease_ID SMALLINT,
Name1 VARCHAR(25),
Description VARCHAR(10000),
Usual_dose NUMERIC(28),
FOREIGN KEY (Generic_ID) REFERENCES REF_Generic(Generic_ID),
FOREIGN KEY (Chem_ID) REFERENCES REF_CatChem(Chem_ID),
FOREIGN KEY (Disease_ID) REFERENCES REF_Disease(Disease_ID)
);

CREATE TABLE Pharmacology (
Medicament_ID SMALLINT,
VISIT_ID INTEGER,
Dose NUMERIC(28),
Duration_mo NUMERIC(28),
Comments VARCHAR(10000),
FOREIGN KEY (Medicament_ID) REFERENCES REF_Medicament(Medicament_ID),
FOREIGN KEY (Visit_ID) REFERENCES Visit(Visit_ID)
);

CREATE TABLE Counseling (
Visit_ID INTEGER,
Type1 VARCHAR(1),
Comments NVARCHAR(10000),
FOREIGN KEY (Visit_ID) REFERENCES Visit(Visit_ID)
);

CREATE TABLE REF_Instr_type
(
IT_ID SMALLINT PRIMARY KEY,
IC_ID SMALLINT,
Name1 VARCHAR(30),
Description VARCHAR(10000),
FOREIGN KEY (IC_ID) REFERENCES REF_Instr_category(IC_ID)
);

CREATE TABLE Interview (
Problem_ID SMALLINT,
IT_ID SMALLINT,
Visit_ID INTEGER,
Type1 VARCHAR(1),
Cat CHAR(1),
CC CHAR(1),
AwT SMALLINT,
AnT SMALLINT,
T_An SMALLINT,
T_Sv SMALLINT,
T_EL SMALLINT,
T_ch CHAR(1),
On_per DATE,
On_prt DATE,
On_GS CHAR(1),
On_assoc CHAR(1),
Ms CHAR(1),
Where1 CHAR(1),
Change1 CHAR(1),
Fluc CHAR(1),
Sleep_h SMALLINT,
Tin_Concentration SMALLINT,
Tin_Sleep SMALLINT,
Tin_QRA SMALLINT,
Tin_Work SMALLINT,
Tin_Rest SMALLINT,
Tin_Sport SMALLINT,
Tin_Soc SMALLINT,
Tin_other SMALLINT,
Tin_Bad_days CHAR(1),
Tin_Freq SMALLINT,
Tin_As_Freq CHAR(1),
Tin_As_Bad CHAR(1),
Tin_Eff_snd CHAR(1),
Tin_How_lng CHAR(1),
Tin_Treatm NVARCHAR(1000),
Tin_Why_prob NVARCHAR(1000),
Tin_comments NVARCHAR(1000),
DST CHAR(1),
DST_Phys CHAR(1),
DST_Descr INTEGER,
DST_Concert INTEGER,
DST_shopp INTEGER,
DST_Mov INTEGER,
DST_Wrk INTEGER,
DST_Rest INTEGER,
DST_Drv INTEGER,
DST_Sport INTEGER,
DST_Church INTEGER,
DST_House INTEGER,
DST_Child INTEGER,
DST_Soc INTEGER,
DST_Oth INTEGER,
DST_Oth_des VARCHAR(1000),
H_Sv NUMERIC(28),
H_An NUMERIC(28),
H_EL NUMERIC(28),
DST_Bad_d CHAR(1),
DST_Freq INTEGER,
DST_As_Bad CHAR(1),
DST_Eff_snd CHAR(1),
DST_how_lng CHAR(1),
DST_Prot CHAR(1),
DSTT INTEGER,
DST_when VARCHAR(1000),
DST_treat VARCHAR(1000),
DST_why_prob VARCHAR(1000),
DST_comments VARCHAR(1000),
Hp CHAR(1),
HA CHAR(1),
HAt VARCHAR(25),
HAr CHAR(1),
HA_Comments VARCHAR(1000),
Out1 CHAR(1),
T_pr INTEGER,
H_pr INTEGER,
HL_pr INTEGER,
Pr CHAR(1),
Ret CHAR(1),
Recom VARCHAR(1000),
Next_v NUMERIC(28),
Next_t NUMERIC(28),
Comments CHAR(10),
FOREIGN KEY (Problem_ID) REFERENCES REF_Problem(Problem_ID),
FOREIGN KEY (IT_ID) REFERENCES REF_Instr_type(IT_ID),
FOREIGN KEY (Visit_ID) REFERENCES Audiological(Visit_ID)
);

CREATE TABLE Instrumentation (
Instr_ID SMALLINT PRIMARY KEY,
IC_ID SMALLINT,
IT_ID SMALLINT,
IM_ID SMALLINT,
Visit_ID INTEGER,
Comments VARCHAR(10000),
FOREIGN KEY (IC_ID) REFERENCES REF_Instr_category(IC_ID),
FOREIGN KEY (IT_ID) REFERENCES REF_Instr_type(IT_ID),
FOREIGN KEY (IM_ID) REFERENCES REF_Instr_model(IM_ID),
FOREIGN KEY (Visit_ID) REFERENCES Visit(Visit_ID)
);

CREATE TABLE REM (
Instr_ID SMALLINT,
Visit_ID INTEGER,
Comments VARCHAR(10000),
Freg_RE NUMERIC(28),
T_R_SPL NUMERIC(28),
Mix_R_SL NUMERIC(28),
Tol_R_SPL NUMERIC(28),
Tol_R_SL NUMERIC(28),
Max_R_SL NUMERIC(28),
Max_R_SPL NUMERIC(28),
Freg_LE NUMERIC(28),
Th_L_SPL NUMERIC(28),
Mix_L_SPL NUMERIC(28),
MIX_L_SL NUMERIC(28),
Tol_L_SPL NUMERIC(28),
Tol_L_SL NUMERIC(28),
Max_L_SL NUMERIC(28),
Max_L_SPL NUMERIC(28),
FOREIGN KEY (Instr_ID) REFERENCES Instrumentation(Instr_ID),
FOREIGN KEY (Visit_ID) REFERENCES Visit(Visit_ID)
);
